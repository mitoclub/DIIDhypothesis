knitr::opts_chunk$set(echo = TRUE)
# Set the file path
file_path <- "/2_Derived/Total_DIID_count.csv"
# Read the CSV file
data <- read.table(file_path, sep = ';', header = TRUE)
file_path
getwd()
file_path <- "../2_Derived/Total_DIID_count.csv"
# Read the CSV file
data <- read.table(file_path, sep = ';', header = TRUE)
file_path <- "/2_Derived/Total_DIID_count.csv"
data <- read.table(file_path, sep = ';', header = TRUE)
getwd()
file_path <- "/2_Derived/Total_DIID_count.csv"
# Read the CSV file
data <- read.table(file_path, sep = ';', header = TRUE)
getwd()
file_path <- "/2_Derived/Total_DIID_count.csv"
data <- read.table(file_path, sep = ';', header = TRUE)
getwd()
file_path <- "../2_Derived/Total_DIID_count.csv"
data <- read.table(file_path, sep = ';', header = TRUE)
getwd()
file_path <- "../2_Derived/Total_DIID_count.csv"
data <- read.table(file_path, sep = ';', header = TRUE)
file_path <- "../2_Derived/Total_DIID_count.csv"
data <- read.table(file_path, sep = ';', header = TRUE)
# Set the file path
getwd()
file_path <- "../2_Derived/Total_DIID_count.csv"
data <- read.table(file_path, sep = ';', header = TRUE)
data <- read.table(../2_Derived/Total_DIID_count.csv, sep = ';', header = TRUE)
data <- read.table("../2_Derived/Total_DIID_count.csv", sep = ';', header = TRUE)
file_path <- "../2_Derived/Total_DIID_count.csv"
data <- read.table(file_path, sep = ';', header = TRUE)
file.exists("../2_Derived/Total_DIID_count.csv")
getwd()
getwd()
file.exists("../2_Derived/Total_DIID_count.csv")
file_path <- "../2_Derived/Total_DIID_count.csv"
data <- read.table(file_path, sep = ';', header = TRUE)
list.files("../")
list.files("2_Derived/")
getwd()
file_path <- "2_Derived/Total_DIID_count.csv"
data <- read.table(file_path, sep = ';', header = TRUE)
# Display the first few rows of the data
head(data)
str(data)
head(data)
names(data)
summary(data$DirectRepeatLength)
summary(data$InvertedRepeatLength)
cor.test(data$Ratio,data$DirectRepeatLength, method = 'spearman') # negative == fragile/alternative is decreasing with repeat length
cor.test(data$DIIDFragilityScore,data$DirectRepeatLength, method = 'spearman') # negative == fragile/alternative is decreasing with repeat length
plot(data$DIIDFragilityScore,data$DirectRepeatLength)
cor.test(data$DIIDFragilityScore,data$InvertedRepeatLength, method = 'spearman') # negative == fragile/alternative is decreasing with repeat length
plot(data$DIIDFragilityScore,data$InvertedRepeatLength)
cor.test(data$DIIDFragilityScore,data$LengthOfInterval1, method = 'spearman') # weak positive == the longer the first interval the less fragile combination
plot(data$DIIDFragilityScore,data$LengthOfInterval1)
cor.test(data$DIIDFragilityScore,data$LengthOfInterval2, method = 'spearman') # no effect
plot(data$DIIDFragilityScore,data$LengthOfInterval2)
cor.test(data$DIIDFragilityScore,data$LengthOfInterval3, method = 'spearman') # a bit positive
plot(data$DIIDFragilityScore,data$LengthOfInterval3)
summary(lm(data$DIIDFragilityScore ~ data$DirectRepeatLength + data$InvertedRepeatLength + data$LengthOfInterval1 + data$LengthOfInterval2 + data$LengthOfInterval3))
summary(lm(data$DIIDFragilityScore ~ data$DirectRepeatLength + data$InvertedRepeatLength + data$LengthOfInterval1 +  data$LengthOfInterval3))
summary(lm(data$DIIDFragilityScore ~ data$DirectRepeatLength + data$InvertedRepeatLength + data$LengthOfInterval1 +  data$LengthOfInterval3))
summary(lm(data$DIIDFragilityScore ~ scale(data$DirectRepeatLength) + scale(data$InvertedRepeatLength) + scale(data$LengthOfInterval1) + scale(data$LengthOfInterval2) + scale(data$LengthOfInterval3)))
data$DIIDFragilityScore = 1/data$DIIDFragilityScore # the higher the score the higher the fragilty
knitr::opts_chunk$set(echo = TRUE)
# Set the file path
file_path <- "2_Derived/Total_DIID_count.csv"
data <- read.table(file_path, sep = ';', header = TRUE)
# Display the first few rows of the data
names(data)
head(data)
# str(data)
summary(data$DIIDFragilityScore)
data$DIIDFragilityScore = 1/data$DIIDFragilityScore # the higher the score the higher the fragilty
summary(data$DirectRepeatLength)
summary(data$InvertedRepeatLength)
cor.test(data$DIIDFragilityScore,data$DirectRepeatLength, method = 'spearman')
plot(data$DIIDFragilityScore,data$DirectRepeatLength)
summary(lm(data$DIIDFragilityScore ~ scale(data$DirectRepeatLength) + scale(data$InvertedRepeatLength) + scale(data$LengthOfInterval1) + scale(data$LengthOfInterval2) + scale(data$LengthOfInterval3)))
summary(data$DIIDFragilityScore)
data = data[data$DIIDFragilityScore < Inf,]
knitr::opts_chunk$set(echo = TRUE)
# Set the file path
file_path <- "2_Derived/Total_DIID_count.csv"
data <- read.table(file_path, sep = ';', header = TRUE)
# Display the first few rows of the data
names(data)
head(data)
# str(data)
summary(data$DIIDFragilityScore)
data$DIIDFragilityScore = 1/data$DIIDFragilityScore # the higher the score (ALT STRUCTURE/ FRAGILE STRUCTURE) the higher the fragility and the higher the deficit of such fragile elements
summary(data$DIIDFragilityScore)
nrow(data)
data = data[data$DIIDFragilityScore < Inf,]
nrow(data)
summary(lm(data$DIIDFragilityScore ~ scale(data$DirectRepeatLength) + scale(data$InvertedRepeatLength) + scale(data$LengthOfInterval1) + scale(data$LengthOfInterval2) + scale(data$LengthOfInterval3)))
names(data)
data$DIIDFragilityScore = data$DI..I.Dcount/data$D.I..IDcount
summary(data$DIIDFragilityScore)
data$DIIDFragilityScore = data$D.I..IDcount/data$DI..I.Dcount # ALTER / FRAGILE
summary(data$DIIDFragilityScore)
knitr::opts_chunk$set(echo = TRUE)
# Set the file path
file_path <- "2_Derived/Total_DIID_count.csv"
data <- read.table(file_path, sep = ';', header = TRUE)
# Display the first few rows of the data
names(data)
head(data)
# str(data)
data$DIIDFragilityScore = data$D.I..IDcount/data$DI..I.Dcount # ALTER / FRAGILE
summary(data$DIIDFragilityScore)
#data$DIIDFragilityScore = 1/data$DIIDFragilityScore # the higher the score (ALT STRUCTURE/ FRAGILE STRUCTURE) the higher the fragility and the higher the deficit of such fragile elements
#summary(data$DIIDFragilityScore)
#nrow(data)
#data = data[data$DIIDFragilityScore < Inf,]
#nrow(data)
summary(data$DIIDFragilityScore)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
# Set the file path
file_path <- "2_Derived/Total_DIID_count.csv"
data <- read.table(file_path, sep = ';', header = TRUE)
# Display the first few rows of the data
names(data)
head(data)
# str(data)
data$DIIDFragilityScore = data$D.I..IDcount/data$DI..I.Dcount # ALTER / FRAGILE
summary(data$DIIDFragilityScore)
#data$DIIDFragilityScore = 1/data$DIIDFragilityScore # the higher the score (ALT STRUCTURE/ FRAGILE STRUCTURE) the higher the fragility and the higher the deficit of such fragile elements
#summary(data$DIIDFragilityScore)
#nrow(data)
#data = data[data$DIIDFragilityScore < Inf,]
#nrow(data)
summary(lm(data$DIIDFragilityScore ~ scale(data$DirectRepeatLength) + scale(data$InvertedRepeatLength) + scale(data$LengthOfInterval1) + scale(data$LengthOfInterval2) + scale(data$LengthOfInterval3)))
knitr::opts_chunk$set(echo = TRUE)
# Set the file path
file_path <- "2_Derived/Total_DIID_count.csv"
data <- read.table(file_path, sep = ';', header = TRUE)
# Display the first few rows of the data
names(data)
head(data)
# str(data)
data$DIIDFragilityScore = data$D.I..IDcount/data$DI..I.Dcount # ALTER / FRAGILE
# the higher the score (ALT STRUCTURE/ FRAGILE STRUCTURE) the higher the deficit of fragile elements the higher selection
summary(data$DIIDFragilityScore)
#data$DIIDFragilityScore = 1/data$DIIDFragilityScore
#summary(data$DIIDFragilityScore)
#nrow(data)
#data = data[data$DIIDFragilityScore < Inf,]
#nrow(data)
summary(data$DIIDFragilityScore)
nrow(data)
data = data[data$DIIDFragilityScore < Inf,]
nrow(data)
summary(data$DIIDFragilityScore)
data$DIIDFragilityScore = data$D.I..IDcount - data$DI..I.Dcount # ALTER / FRAGILE
knitr::opts_chunk$set(echo = TRUE)
# Set the file path
file_path <- "2_Derived/Total_DIID_count.csv"
data <- read.table(file_path, sep = ';', header = TRUE)
# Display the first few rows of the data
names(data)
head(data)
# str(data)
data$DIIDFragilityScore = data$D.I..IDcount - data$DI..I.Dcount # ALTER / FRAGILE
# the higher the score (ALT STRUCTURE/ FRAGILE STRUCTURE) the higher the deficit of fragile elements the higher selection
summary(data$DIIDFragilityScore)
#data$DIIDFragilityScore = 1/data$DIIDFragilityScore
#summary(data$DIIDFragilityScore)
#nrow(data)
#data = data[data$DIIDFragilityScore < Inf,]
#nrow(data)
summary(data$DIIDFragilityScore)
cor.test(data$DIIDFragilityScore,data$DirectRepeatLength, method = 'spearman')
plot(data$DIIDFragilityScore,data$DirectRepeatLength)
cor.test(data$DIIDFragilityScore,data$InvertedRepeatLength, method = 'spearman')
plot(data$DIIDFragilityScore,data$InvertedRepeatLength)
cor.test(data$DIIDFragilityScore,data$DirectRepeatLength, method = 'spearman')
plot(data$DIIDFragilityScore,data$DirectRepeatLength)
cor.test(data$DIIDFragilityScore,data$LengthOfInterval1, method = 'spearman')
plot(data$DIIDFragilityScore,data$LengthOfInterval1)
cor.test(data$DIIDFragilityScore,data$LengthOfInterval2, method = 'spearman')
plot(data$DIIDFragilityScore,data$LengthOfInterval2)
cor.test(data$DIIDFragilityScore,data$LengthOfInterval3, method = 'spearman')
plot(data$DIIDFragilityScore,data$LengthOfInterval3)
summary(lm(data$DIIDFragilityScore ~ scale(data$DirectRepeatLength) + scale(data$InvertedRepeatLength) + scale(data$LengthOfInterval1) + scale(data$LengthOfInterval2) + scale(data$LengthOfInterval3)))
